Grammar: DataElement 6.0
Namespace: fhir.datatype.parameterdefinition
Description: "Fhir ParameterDefinition definition. Autogenerated"
// {
//   "resourceType": "StructureDefinition",
//   "id": "ParameterDefinition",
//   "text": {
//     "status": "generated",
//     "div": "<div xmlns=\"http://www.w3.org/1999/xhtml\"><p>The 
// narrative has been removed to reduce the size of the distribution 
// of the Hl7.Fhir.Specification library</p></div>"
//   },
//   "extension": [
//     {
//       "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-standards-status",
//       "valueCode": "trial-use"
//     }
//   ],
//   "url": "http://hl7.org/fhir/StructureDefinition/ParameterDefinition",
//   "version": "4.0.0",
//   "name": "ParameterDefinition",
//   "status": "draft",
//   "publisher": "HL7 FHIR Standard",
//   "contact": [
//     {
//       "telecom": [
//         {
//           "system": "url",
//           "value": "http://hl7.org/fhir"
//         }
//       ]
//     }
//   ],
//   "description": "Base StructureDefinition for ParameterDefinition 
// Type: The parameters to the module. This collection specifies 
// both the input and output parameters. Input parameters are provided 
// by the caller as part of the $evaluate operation. Output parameters 
// are included in the GuidanceResponse.",
//   "fhirVersion": "4.0.0",
//   "mapping": [
//     {
//       "identity": "rim",
//       "uri": "http://hl7.org/v3",
//       "name": "RIM Mapping"
//     }
//   ],
//   "kind": "complex-type",
//   "abstract": false,
//   "type": "ParameterDefinition",
//   "baseDefinition": "http://hl7.org/fhir/StructureDefinition/Element",
//   "derivation": "specialization",
//   "snapshot": {
//     "element": [
//       {
//         "id": "ParameterDefinition",
//         "extension": [
//           {
//             "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-standards-status",
//             "valueCode": "trial-use"
//           }
//         ],
//         "path": "ParameterDefinition",
//         "short": "Definition of a parameter to a module",
//         "definition": "The parameters to the module. This collection 
// specifies both the input and output parameters. Input parameters 
// are provided by the caller as part of the $evaluate operation. 
// Output parameters are included in the GuidanceResponse.",
//         "min": 0,
//         "max": "*",
//         "base": {
//           "path": "ParameterDefinition",
//           "min": 0,
//           "max": "*"
//         },
//         "condition": [
//           "ele-1"
//         ],
//         "constraint": [
//           {
//             "key": "ele-1",
//             "severity": "error",
//             "human": "All FHIR elements must have a @value or 
// children",
//             "expression": "hasValue() or (children().count() 
// > id.count())",
//             "xpath": "@value|f:*|h:div",
//             "source": "Element"
//           }
//         ],
//         "isModifier": false,
//         "mapping": [
//           {
//             "identity": "rim",
//             "map": "n/a"
//           }
//         ]
//       },
//       {
//         "id": "ParameterDefinition.id",
//         "path": "ParameterDefinition.id",
//         "representation": [
//           "xmlAttr"
//         ],
//         "short": "Unique id for inter-element referencing",
//         "definition": "Unique id for the element within a resource 
// (for internal references). This may be any string value that 
// does not contain spaces.",
//         "min": 0,
//         "max": "1",
//         "base": {
//           "path": "Element.id",
//           "min": 0,
//           "max": "1"
//         },
//         "type": [
//           {
//             "code": "string"
//           }
//         ],
//         "isModifier": false,
//         "isSummary": false,
//         "mapping": [
//           {
//             "identity": "rim",
//             "map": "n/a"
//           }
//         ]
//       },
//       {
//         "id": "ParameterDefinition.extension",
//         "path": "ParameterDefinition.extension",
//         "slicing": {
//           "discriminator": [
//             {
//               "type": "value",
//               "path": "url"
//             }
//           ],
//           "description": "Extensions are always sliced by (at 
// least) url",
//           "rules": "open"
//         },
//         "short": "Additional content defined by implementations",
//         "definition": "May be used to represent additional information 
// that is not part of the basic definition of the element. To make 
// the use of extensions safe and manageable, there is a strict 
// set of governance  applied to the definition and use of extensions. 
// Though any implementer can define an extension, there is a set 
// of requirements that SHALL be met as part of the definition of 
// the extension.",
//         "comment": "There can be no stigma associated with the 
// use of extensions by any application, project, or standard - 
// regardless of the institution or jurisdiction that uses or defines 
// the extensions.  The use of extensions is what allows the FHIR 
// specification to retain a core level of simplicity for everyone.",
//         "alias": [
//           "extensions",
//           "user content"
//         ],
//         "min": 0,
//         "max": "*",
//         "base": {
//           "path": "Element.extension",
//           "min": 0,
//           "max": "*"
//         },
//         "type": [
//           {
//             "code": "Extension"
//           }
//         ],
//         "isModifier": false,
//         "isSummary": false,
//         "mapping": [
//           {
//             "identity": "rim",
//             "map": "n/a"
//           }
//         ]
//       },
//       {
//         "id": "ParameterDefinition.name",
//         "path": "ParameterDefinition.name",
//         "short": "Name used to access the parameter value",
//         "definition": "The name of the parameter used to allow 
// access to the value of the parameter in evaluation contexts.",
//         "min": 0,
//         "max": "1",
//         "base": {
//           "path": "ParameterDefinition.name",
//           "min": 0,
//           "max": "1"
//         },
//         "type": [
//           {
//             "code": "code"
//           }
//         ],
//         "isModifier": false,
//         "isSummary": true
//       },
//       {
//         "id": "ParameterDefinition.use",
//         "path": "ParameterDefinition.use",
//         "short": "in | out",
//         "definition": "Whether the parameter is input or output 
// for the module.",
//         "min": 1,
//         "max": "1",
//         "base": {
//           "path": "ParameterDefinition.use",
//           "min": 1,
//           "max": "1"
//         },
//         "type": [
//           {
//             "code": "code"
//           }
//         ],
//         "isModifier": false,
//         "isSummary": true,
//         "binding": {
//           "extension": [
//             {
//               "url": "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
//               "valueString": "ParameterUse"
//             }
//           ],
//           "strength": "required",
//           "description": "Whether the parameter is input or output.",
//           "valueSet": "http://hl7.org/fhir/ValueSet/operation-parameter-use|4.0.0"
//         }
//       },
//       {
//         "id": "ParameterDefinition.min",
//         "path": "ParameterDefinition.min",
//         "short": "Minimum cardinality",
//         "definition": "The minimum number of times this parameter 
// SHALL appear in the request or response.",
//         "min": 0,
//         "max": "1",
//         "base": {
//           "path": "ParameterDefinition.min",
//           "min": 0,
//           "max": "1"
//         },
//         "type": [
//           {
//             "code": "integer"
//           }
//         ],
//         "isModifier": false,
//         "isSummary": true
//       },
//       {
//         "id": "ParameterDefinition.max",
//         "path": "ParameterDefinition.max",
//         "short": "Maximum cardinality (a number of *)",
//         "definition": "The maximum number of times this element 
// is permitted to appear in the request or response.",
//         "min": 0,
//         "max": "1",
//         "base": {
//           "path": "ParameterDefinition.max",
//           "min": 0,
//           "max": "1"
//         },
//         "type": [
//           {
//             "code": "string"
//           }
//         ],
//         "isModifier": false,
//         "isSummary": true
//       },
//       {
//         "id": "ParameterDefinition.documentation",
//         "path": "ParameterDefinition.documentation",
//         "short": "A brief description of the parameter",
//         "definition": "A brief discussion of what the parameter 
// is for and how it is used by the module.",
//         "min": 0,
//         "max": "1",
//         "base": {
//           "path": "ParameterDefinition.documentation",
//           "min": 0,
//           "max": "1"
//         },
//         "type": [
//           {
//             "code": "string"
//           }
//         ],
//         "isModifier": false,
//         "isSummary": true
//       },
//       {
//         "id": "ParameterDefinition.type",
//         "path": "ParameterDefinition.type",
//         "short": "What type of value",
//         "definition": "The type of the parameter.",
//         "min": 1,
//         "max": "1",
//         "base": {
//           "path": "ParameterDefinition.type",
//           "min": 1,
//           "max": "1"
//         },
//         "type": [
//           {
//             "code": "code"
//           }
//         ],
//         "isModifier": false,
//         "isSummary": true,
//         "binding": {
//           "extension": [
//             {
//               "url": "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
//               "valueString": "FHIRAllTypes"
//             },
//             {
//               "url": "http://hl7.org/fhir/StructureDefinition/elementdefinition-isCommonBinding",
//               "valueBoolean": true
//             }
//           ],
//           "strength": "required",
//           "description": "A list of all the concrete types defined 
// in this version of the FHIR specification - Abstract Types, Data 
// Types and Resource Types.",
//           "valueSet": "http://hl7.org/fhir/ValueSet/all-types|4.0.0"
//         }
//       },
//       {
//         "id": "ParameterDefinition.profile",
//         "path": "ParameterDefinition.profile",
//         "short": "What profile the value is expected to be",
//         "definition": "If specified, this indicates a profile 
// that the input data must conform to, or that the output data 
// will conform to.",
//         "min": 0,
//         "max": "1",
//         "base": {
//           "path": "ParameterDefinition.profile",
//           "min": 0,
//           "max": "1"
//         },
//         "type": [
//           {
//             "code": "canonical",
//             "targetProfile": [
//               "http://hl7.org/fhir/StructureDefinition/StructureDefinition"
//             ]
//           }
//         ],
//         "isModifier": false,
//         "isSummary": true
//       }
//     ]
//   },
//   "differential": {
//     "element": [
//       {
//         "id": "ParameterDefinition",
//         "extension": [
//           {
//             "url": "http://hl7.org/fhir/StructureDefinition/structuredefinition-standards-status",
//             "valueCode": "trial-use"
//           }
//         ],
//         "path": "ParameterDefinition",
//         "short": "Definition of a parameter to a module",
//         "definition": "The parameters to the module. This collection 
// specifies both the input and output parameters. Input parameters 
// are provided by the caller as part of the $evaluate operation. 
// Output parameters are included in the GuidanceResponse.",
//         "min": 0,
//         "max": "*"
//       },
//       {
//         "id": "ParameterDefinition.name",
//         "path": "ParameterDefinition.name",
//         "short": "Name used to access the parameter value",
//         "definition": "The name of the parameter used to allow 
// access to the value of the parameter in evaluation contexts.",
//         "min": 0,
//         "max": "1",
//         "type": [
//           {
//             "code": "code"
//           }
//         ],
//         "isSummary": true
//       },
//       {
//         "id": "ParameterDefinition.use",
//         "path": "ParameterDefinition.use",
//         "short": "in | out",
//         "definition": "Whether the parameter is input or output 
// for the module.",
//         "min": 1,
//         "max": "1",
//         "type": [
//           {
//             "code": "code"
//           }
//         ],
//         "isSummary": true,
//         "binding": {
//           "extension": [
//             {
//               "url": "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
//               "valueString": "ParameterUse"
//             }
//           ],
//           "strength": "required",
//           "description": "Whether the parameter is input or output.",
//           "valueSet": "http://hl7.org/fhir/ValueSet/operation-parameter-use|4.0.0"
//         }
//       },
//       {
//         "id": "ParameterDefinition.min",
//         "path": "ParameterDefinition.min",
//         "short": "Minimum cardinality",
//         "definition": "The minimum number of times this parameter 
// SHALL appear in the request or response.",
//         "min": 0,
//         "max": "1",
//         "type": [
//           {
//             "code": "integer"
//           }
//         ],
//         "isSummary": true
//       },
//       {
//         "id": "ParameterDefinition.max",
//         "path": "ParameterDefinition.max",
//         "short": "Maximum cardinality (a number of *)",
//         "definition": "The maximum number of times this element 
// is permitted to appear in the request or response.",
//         "min": 0,
//         "max": "1",
//         "type": [
//           {
//             "code": "string"
//           }
//         ],
//         "isSummary": true
//       },
//       {
//         "id": "ParameterDefinition.documentation",
//         "path": "ParameterDefinition.documentation",
//         "short": "A brief description of the parameter",
//         "definition": "A brief discussion of what the parameter 
// is for and how it is used by the module.",
//         "min": 0,
//         "max": "1",
//         "type": [
//           {
//             "code": "string"
//           }
//         ],
//         "isSummary": true
//       },
//       {
//         "id": "ParameterDefinition.type",
//         "path": "ParameterDefinition.type",
//         "short": "What type of value",
//         "definition": "The type of the parameter.",
//         "min": 1,
//         "max": "1",
//         "type": [
//           {
//             "code": "code"
//           }
//         ],
//         "isSummary": true,
//         "binding": {
//           "extension": [
//             {
//               "url": "http://hl7.org/fhir/StructureDefinition/elementdefinition-bindingName",
//               "valueString": "FHIRAllTypes"
//             },
//             {
//               "url": "http://hl7.org/fhir/StructureDefinition/elementdefinition-isCommonBinding",
//               "valueBoolean": true
//             }
//           ],
//           "strength": "required",
//           "description": "A list of all the concrete types defined 
// in this version of the FHIR specification - Abstract Types, Data 
// Types and Resource Types.",
//           "valueSet": "http://hl7.org/fhir/ValueSet/all-types|4.0.0"
//         }
//       },
//       {
//         "id": "ParameterDefinition.profile",
//         "path": "ParameterDefinition.profile",
//         "short": "What profile the value is expected to be",
//         "definition": "If specified, this indicates a profile 
// that the input data must conform to, or that the output data 
// will conform to.",
//         "min": 0,
//         "max": "1",
//         "type": [
//           {
//             "code": "canonical",
//             "targetProfile": [
//               "http://hl7.org/fhir/StructureDefinition/StructureDefinition"
//             ]
//           }
//         ],
//         "isSummary": true
//       }
//     ]
//   }
// }
                                                                                                                                            // ConvertFhirClass.cs:113
// http://hl7.org/fhir/StructureDefinition/ParameterDefinition
Group: ParameterDefinition                                                                                                                  // ConvertFhirClass.cs:115
Description: "Base StructureDefinition for ParameterDefinition Type: The parameters to the module. This collection specifies both the input and output parameters. Input parameters are provided by the caller as part of the $evaluate operation. Output parameters are included in the GuidanceResponse."// ConvertFhirClass.cs:127
Property: fhir.datatype.parameterdefinition.Name 0..1                                                                                       // ConvertFhirClass.cs:265
Property: fhir.datatype.parameterdefinition.Use 1..1                                                                                        // ConvertFhirClass.cs:265
Property: fhir.datatype.parameterdefinition.Min 0..1                                                                                        // ConvertFhirClass.cs:265
Property: fhir.datatype.parameterdefinition.Max 0..1                                                                                        // ConvertFhirClass.cs:265
Property: fhir.datatype.parameterdefinition.Documentation 0..1                                                                              // ConvertFhirClass.cs:265
Property: fhir.datatype.parameterdefinition.Type 1..1                                                                                       // ConvertFhirClass.cs:265
Property: fhir.datatype.parameterdefinition.Profile 0..1                                                                                    // ConvertFhirClass.cs:265
                                                                                                                                            // ConvertFhirClass.cs:251
// Entry definition of ParameterDefinition.name
Element: Name                                                                                                                               // ConvertFhirClass.cs:253
Value: concept                                                                                                                              // ConvertFhirClass.cs:259
                                                                                                                                            // ConvertFhirClass.cs:251
// Entry definition of ParameterDefinition.use
Element: Use                                                                                                                                // ConvertFhirClass.cs:253
Value: concept                                                                                                                              // ConvertFhirClass.cs:259
                                                                                                                                            // ConvertFhirClass.cs:251
// Entry definition of ParameterDefinition.min
Element: Min                                                                                                                                // ConvertFhirClass.cs:253
Value: integer                                                                                                                              // ConvertFhirClass.cs:259
                                                                                                                                            // ConvertFhirClass.cs:251
// Entry definition of ParameterDefinition.max
Element: Max                                                                                                                                // ConvertFhirClass.cs:253
Value: string                                                                                                                               // ConvertFhirClass.cs:259
                                                                                                                                            // ConvertFhirClass.cs:251
// Entry definition of ParameterDefinition.documentation
Element: Documentation                                                                                                                      // ConvertFhirClass.cs:253
Value: string                                                                                                                               // ConvertFhirClass.cs:259
                                                                                                                                            // ConvertFhirClass.cs:251
// Entry definition of ParameterDefinition.type
Element: Type                                                                                                                               // ConvertFhirClass.cs:253
Value: concept                                                                                                                              // ConvertFhirClass.cs:259
                                                                                                                                            // ConvertFhirClass.cs:251
// Entry definition of ParameterDefinition.profile
Element: Profile                                                                                                                            // ConvertFhirClass.cs:253
Value: uri                                                                                                                                  // ConvertFhirClass.cs:259
